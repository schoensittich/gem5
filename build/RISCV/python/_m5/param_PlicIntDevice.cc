/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_cc.py:273
 */

#include "pybind11/pybind11.h"
#include "pybind11/stl.h"

#include <type_traits>

#include "base/compiler.hh"
#include "params/PlicIntDevice.hh"
#include "sim/init.hh"
#include "sim/sim_object.hh"

#include "dev/riscv/plic_device.hh"

#include "base/types.hh"
#include "base/types.hh"
#include "dev/platform.hh"
namespace py = pybind11;

namespace gem5
{

static void
module_init(py::module_ &m_internal)
{
py::module_ m = m_internal.def_submodule("param_PlicIntDevice");
    py::class_<PlicIntDeviceParams, BasicPioDeviceParams, std::unique_ptr<PlicIntDeviceParams, py::nodelete>>(m, "PlicIntDeviceParams")
        .def_readwrite("interrupt_id", &PlicIntDeviceParams::interrupt_id)
        .def_readwrite("pio_size", &PlicIntDeviceParams::pio_size)
        .def_readwrite("platform", &PlicIntDeviceParams::platform)
        ;

    py::class_<gem5::PlicIntDevice, gem5::BasicPioDevice, std::unique_ptr<gem5::PlicIntDevice, py::nodelete>>(m, "gem5_COLONS_PlicIntDevice")
        ;

}

static EmbeddedPyBind embed_obj("PlicIntDevice", module_init, "BasicPioDevice");

} // namespace gem5
